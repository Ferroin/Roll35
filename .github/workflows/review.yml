---
name: Review

on:
  pull_request: null

concurrency:
  group: review-${{ github.ref }}
  cancel-in-progress: true

jobs:
  prep-review:
    name: Prepare Review Jobs
    runs-on: ubuntu-latest
    outputs:
      actionlint: ${{ steps.actionlint.outputs.run }}
      flake8: ${{ steps.flake8.outputs.run }}
      languagetool: ${{ steps.languagetool.outputs.run }}
      markdownlint: ${{ steps.markdownlint.outputs.run }}
      shellcheck: ${{ steps.shellcheck.outputs.run }}
      yamllint: ${{ steps.yamllint.outputs.run }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Check files for actionlint
        id: actionlint
        run: |
          if [ "${{ contains(github.event.pull_request.labels.*.name, 'ci/actionlint') }}" = "true" ]; then
            echo 'run=true' >> "${GITHUB_OUTPUT}"
          elif git diff --name-only origin/${{ github.base_ref }} HEAD | grep -Eq '\.github/workflows/.*' ; then
            echo 'run=true' >> "${GITHUB_OUTPUT}"
            echo 'GitHub Actions workflows have changed, need to run actionlint.'
          else
            echo 'run=false' >> "${GITHUB_OUTPUT}"
          fi
      - name: Check files for flake8
        id: flake8
        run: |
          if [ "${{ contains(github.event.pull_request.labels.*.name, 'ci/flake8') }}" = "true" ]; then
            echo 'run=true' >> "${GITHUB_OUTPUT}"
          elif git diff --name-only origin/${{ github.base_ref }} HEAD | grep -Eq '.*\.py' ; then
            echo 'run=true' >> "${GITHUB_OUTPUT}"
            echo 'Python files have changed, need to run flake8.'
          else
            echo 'run=false' >> "${GITHUB_OUTPUT}"
          fi
      - name: Check files for languagetool
        id: languagetool
        run: |
          if [ "${{ contains(github.event.pull_request.labels.*.name, 'ci/languagetool') }}" = "true" ]; then
            echo 'run=true' >> "${GITHUB_OUTPUT}"
          elif git diff --name-only origin/${{ github.base_ref }} HEAD | grep -Eq '.*\.md' ; then
            echo 'run=true' >> "${GITHUB_OUTPUT}"
            echo 'Markdown files have changed, need to run languagetool.'
          else
            echo 'run=false' >> "${GITHUB_OUTPUT}"
          fi
      - name: Check files for markdownlint
        id: markdownlint
        run: |
          if [ "${{ contains(github.event.pull_request.labels.*.name, 'ci/markdownlint') }}" = "true" ]; then
            echo 'run=true' >> "${GITHUB_OUTPUT}"
          elif git diff --name-only origin/${{ github.base_ref }} HEAD | grep -Eq '.*\.md' ; then
            echo 'run=true' >> "${GITHUB_OUTPUT}"
            echo 'Markdown files have changed, need to run markdownlint.'
          else
            echo 'run=false' >> "${GITHUB_OUTPUT}"
          fi
      - name: Check files for shellcheck
        id: shellcheck
        run: |
          if [ "${{ contains(github.event.pull_request.labels.*.name, 'ci/shellcheck') }}" = "true" ]; then
            echo 'run=true' >> "${GITHUB_OUTPUT}"
          elif git diff --name-only origin/${{ github.base_ref }} HEAD | grep -Eq '.*\.sh' ; then
            echo 'run=true' >> "${GITHUB_OUTPUT}"
            echo 'Shell scripts have changed, need to run shellcheck.'
          else
            echo 'run=false' >> "${GITHUB_OUTPUT}"
          fi
      - name: Check files for yamllint
        id: yamllint
        run: |
          if [ "${{ contains(github.event.pull_request.labels.*.name, 'ci/yamllint') }}" = "true" ]; then
            echo 'run=true' >> "${GITHUB_OUTPUT}"
          elif git diff --name-only origin/${{ github.base_ref }} HEAD | grep -Eq '.*\.ya?ml' ; then
            echo 'run=true' >> "${GITHUB_OUTPUT}"
            echo 'YAML files have changed, need to run yamllint.'
          else
            echo 'run=false' >> "${GITHUB_OUTPUT}"
          fi

  actionlint:
    name: actionlint
    needs: prep-review
    if: needs.prep-review.outputs.actionlint == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
      - name: Run actionlint
        uses: reviewdog/action-actionlint@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review

  flake8:
    name: flake8
    needs: prep-review
    if: needs.prep-review.outputs.flake8 == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Run flake8
        uses: reviewdog/action-flake8@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review

  languagetool:
    name: languagetool
    needs: prep-review
    if: needs.prep-review.outputs.languagetool == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
      - name: Run languagetool
        uses: reviewdog/action-languagetool@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review

  markdownlint:
    name: markdownlint
    needs: prep-review
    if: needs.prep-review.outputs.markdownlint == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
      - name: Run markdownlint
        uses: reviewdog/action-markdownlint@v0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          markdownlint_flags: -s ./.mdl-style.rb .

  shellcheck:
    name: shellcheck
    needs: prep-review
    if: needs.prep-review.outputs.shellcheck == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
      - name: Run shellcheck
        uses: reviewdog/action-shellcheck@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          path: "."
          pattern: "*.sh*"
          exclude: "./.git/*"

  yamllint:
    name: yamllint
    needs: prep-review
    if: needs.prep-review.outputs.yamllint == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
      - name: Run yamllint
        uses: reviewdog/action-yamllint@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review

# Following jobs always run

  detect-secrets:
    name: detect-secrets
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
      - name: Run detect-secrets
        uses: reviewdog/action-detect-secrets@v0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          detect_secrets_flags: --all-files --force-use-all-plugins --exclude-files '\.git/.*'

  check-labels:
    name: check-labels
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: pip install ruamel.yaml
      - name: Run scripts/check-labels.py
        run: scripts/check-labels.py
